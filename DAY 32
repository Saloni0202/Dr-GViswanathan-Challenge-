1353D. Constructing the Array

#include<bits/stdc++.h>
#define ll                    long long int
#define pb                    push_back
#define F                     first
#define S                     second
#define mp                    make_pair
#define MOD                   1000000007
#define vi                    vector<int>
#define vll                   vector<ll>
#define pll                   pair<ll,ll>
#define pii                   pair<int,int>
#define all(p)                p.begin(),p.end()
#define mid(s,e)              (s+(e-s)/2)
#define eb                    emplace_back
#define ull                   unsigned long long
#define bug(x)				  cout<<"  [ "#x<<" = "<<x<<" ]"<<endl;
#define KAMEHAMEHA            ios_base::sync_with_stdio(0);
#define RASENGAN              ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
using namespace std;
int main()
{
    KAMEHAMEHA
	
	int t;
	cin>>t;
	while(t--)
	{
		int n;
		cin>>n;
		vi ans(n+1);;
		map<int , vector< pii > > main;
		main[n].eb(1,n);
		int cnt=1;
	
		set<int,greater<int>> range;
		range.insert(n);
		for(auto i:range)
		{
			sort(all(main[i]));
			int temp=i;
			for(auto i: main[temp])
			{
				int mid=(i.F+i.S)/2;
				ans[mid]=cnt++;
				if(mid-i.F)
				{
					main[mid-i.F].eb(i.F,mid-1);
					
				}
				if(i.S-mid)
				{
					main[i.S-mid].eb(mid+1,i.S);
				}
				range.insert(mid-i.F);
				range.insert(i.S-mid);
			}
			
		}
		for(int i=1;i<=n;i++)
			cout<<ans[i]<<" ";
		cout<<endl;
	}
    return 0;
}



405A. Gravity Flip

#include<iostream>
#include<ctype.h>
#include<string.h>
#include<vector>
#include<algorithm>
#include<stdlib.h>
#include<queue>
#include<list>
#include<set>
#include<algorithm>
#include<string>
using namespace std;
#define fast ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0)
#define ull unsigned long long
#define ll long long
#define pb push_back
#define  for0(i,n)   for (i=0; i<n; i++)
#define   for1(i,n)  for (i=1; i<=n; i++)
#define  forab(i,a,b)for (i=a; i<=b; i++)
#define   rof0(i,n)  for (i=n-1; i>=0; i--)
#define  rof1(i,n)   for (i=n; i>=1; i--)
 
 
const int MOD = 1000000007;
const int MAX = 1000005;
 
int SetBit (int n, int x) { return n | (1 << x); }
int ClearBit (int n, int x) { return n & ~(1 << x); }
int ToggleBit (int n, int x) { return n ^ (1 << x); }
bool CheckBit (int n, int x) { return (bool)(n & (1 << x)); }
 
int main()
{
    fast;
    multiset<int>box;
    int n;
    cin>>n;
    int x;
    for(int i=0;i<n;i++)
    {
        cin>>x;
        box.insert(x);
    }
    multiset<int>::iterator it;
    for(it=box.begin();it!=box.end();it++)
    {
        cout<<*it<<" ";
    }
 
 
    return 0;
}
